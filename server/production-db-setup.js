#!/usr/bin/env node

/**
 * Production Database Setup Script
 * This script runs on Render to set up the database
 */

// Load environment variables
require('dotenv').config();

const { sequelize } = require('./config/sequelize');

async function setupProductionDatabase() {
  try {
    console.log('üöÄ Starting production database setup...');
    console.log('üìã Environment:', process.env.NODE_ENV);
    console.log('üóÑÔ∏è Database:', process.env.DB_HOST);
    
    // Test connection
    console.log('üîç Testing database connection...');
    await sequelize.authenticate();
    console.log('‚úÖ Database connection successful');
    
    // Check existing tables
    console.log('üîç Checking existing tables...');
    const queryInterface = sequelize.getQueryInterface();
    const tables = await queryInterface.showAllTables();
    console.log('üìã Existing tables:', tables.length, 'tables found');
    
    if (tables.length > 0) {
      console.log('üìã Table names:', tables);
    }
    
    // Sync database (create tables if they don't exist)
    console.log('üîÑ Syncing database...');
    await sequelize.sync({ alter: true });
    console.log('‚úÖ Database sync completed');
    
    // Check tables after sync
    console.log('üîç Checking tables after sync...');
    const tablesAfter = await queryInterface.showAllTables();
    console.log('üìã Tables after sync:', tablesAfter.length, 'tables');
    
    // Test key models
    console.log('üîç Testing key models...');
    
    try {
      const User = require('./models/User');
      const userCount = await User.count();
      console.log('‚úÖ User model working, count:', userCount);
    } catch (userError) {
      console.log('‚ùå User model error:', userError.message);
    }
    
    try {
      const Company = require('./models/Company');
      const companyCount = await Company.count();
      console.log('‚úÖ Company model working, count:', companyCount);
    } catch (companyError) {
      console.log('‚ùå Company model error:', companyError.message);
    }
    
    try {
      const Job = require('./models/Job');
      const jobCount = await Job.count();
      console.log('‚úÖ Job model working, count:', jobCount);
    } catch (jobError) {
      console.log('‚ùå Job model error:', jobError.message);
    }
    
    console.log('üéâ Production database setup completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Production database setup failed:', error);
    throw error;
  } finally {
    await sequelize.close();
  }
}

// Run if called directly
if (require.main === module) {
  setupProductionDatabase()
    .then(() => {
      console.log('‚úÖ Setup completed successfully');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Setup failed:', error);
      process.exit(1);
    });
}

module.exports = { setupProductionDatabase };
